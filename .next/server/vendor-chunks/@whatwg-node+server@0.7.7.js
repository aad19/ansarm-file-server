"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@whatwg-node+server@0.7.7";
exports.ids = ["vendor-chunks/@whatwg-node+server@0.7.7"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/createServerAdapter.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/createServerAdapter.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createServerAdapter: () => (/* binding */ createServerAdapter)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/.pnpm/@whatwg-node+fetch@0.8.8/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/utils.js\");\n/* eslint-disable @typescript-eslint/ban-types */\n\n\nasync function handleWaitUntils(waitUntilPromises) {\n    const waitUntils = await Promise.allSettled(waitUntilPromises);\n    waitUntils.forEach(waitUntil => {\n        if (waitUntil.status === 'rejected') {\n            console.error(waitUntil.reason);\n        }\n    });\n}\n// Required for envs like nextjs edge runtime\nfunction isRequestAccessible(serverContext) {\n    try {\n        return !!(serverContext === null || serverContext === void 0 ? void 0 : serverContext.request);\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction createServerAdapter(serverAdapterBaseObject, options) {\n    const fetchAPI = {\n        .../*#__PURE__*/ (_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__, 2))),\n        ...options === null || options === void 0 ? void 0 : options.fetchAPI,\n    };\n    const givenHandleRequest = typeof serverAdapterBaseObject === 'function'\n        ? serverAdapterBaseObject\n        : serverAdapterBaseObject.handle;\n    const onRequestHooks = [];\n    const onResponseHooks = [];\n    if ((options === null || options === void 0 ? void 0 : options.plugins) != null) {\n        for (const plugin of options.plugins) {\n            if (plugin.onRequest) {\n                onRequestHooks.push(plugin.onRequest);\n            }\n            if (plugin.onResponse) {\n                onResponseHooks.push(plugin.onResponse);\n            }\n        }\n    }\n    async function handleRequest(request, serverContext) {\n        let url = new Proxy({}, {\n            get: (_target, prop, _receiver) => {\n                url = new fetchAPI.URL(request.url, 'http://localhost');\n                return Reflect.get(url, prop, url);\n            },\n        });\n        let requestHandler = givenHandleRequest;\n        let response;\n        for (const onRequestHook of onRequestHooks) {\n            await onRequestHook({\n                request,\n                serverContext,\n                fetchAPI,\n                url,\n                requestHandler,\n                setRequestHandler(newRequestHandler) {\n                    requestHandler = newRequestHandler;\n                },\n                endResponse(newResponse) {\n                    response = newResponse;\n                },\n            });\n            if (response) {\n                break;\n            }\n        }\n        if (!response) {\n            response = await requestHandler(request, serverContext);\n        }\n        for (const onResponseHook of onResponseHooks) {\n            await onResponseHook({\n                request,\n                response,\n                serverContext,\n            });\n        }\n        return response;\n    }\n    function handleNodeRequest(nodeRequest, ...ctx) {\n        const serverContext = ctx.length > 1 ? completeAssign({}, ...ctx) : ctx[0];\n        const request = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeNodeRequest)(nodeRequest, fetchAPI.Request);\n        return handleRequest(request, serverContext);\n    }\n    async function requestListener(nodeRequest, serverResponse, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            req: nodeRequest,\n            res: serverResponse,\n            waitUntil(promise) {\n                if (promise != null) {\n                    waitUntilPromises.push(promise);\n                }\n            },\n        };\n        const response = await handleNodeRequest(nodeRequest, defaultServerContext, ...ctx);\n        if (response) {\n            await (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sendNodeResponse)(response, serverResponse, nodeRequest);\n        }\n        else {\n            await new Promise(resolve => {\n                serverResponse.statusCode = 404;\n                serverResponse.once('end', resolve);\n                serverResponse.end();\n            });\n        }\n        if (waitUntilPromises.length > 0) {\n            await handleWaitUntils(waitUntilPromises);\n        }\n    }\n    function handleEvent(event, ...ctx) {\n        if (!event.respondWith || !event.request) {\n            throw new TypeError(`Expected FetchEvent, got ${event}`);\n        }\n        const serverContext = ctx.length > 0 ? Object.assign({}, event, ...ctx) : event;\n        const response$ = handleRequest(event.request, serverContext);\n        event.respondWith(response$);\n    }\n    function handleRequestWithWaitUntil(request, ...ctx) {\n        const serverContext = ctx.length > 1 ? completeAssign({}, ...ctx) : ctx[0] || {};\n        if (!('waitUntil' in serverContext)) {\n            const waitUntilPromises = [];\n            const response$ = handleRequest(request, {\n                ...serverContext,\n                waitUntil(promise) {\n                    if (promise != null) {\n                        waitUntilPromises.push(promise);\n                    }\n                },\n            });\n            if (waitUntilPromises.length > 0) {\n                return handleWaitUntils(waitUntilPromises).then(() => response$);\n            }\n            return response$;\n        }\n        return handleRequest(request, serverContext);\n    }\n    const fetchFn = (input, ...maybeCtx) => {\n        if (typeof input === 'string' || 'href' in input) {\n            const [initOrCtx, ...restOfCtx] = maybeCtx;\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isRequestInit)(initOrCtx)) {\n                return handleRequestWithWaitUntil(new fetchAPI.Request(input, initOrCtx), ...restOfCtx);\n            }\n            return handleRequestWithWaitUntil(new fetchAPI.Request(input), ...maybeCtx);\n        }\n        return handleRequestWithWaitUntil(input, ...maybeCtx);\n    };\n    const genericRequestHandler = (input, ...maybeCtx) => {\n        // If it is a Node request\n        const [initOrCtxOrRes, ...restOfCtx] = maybeCtx;\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isNodeRequest)(input)) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServerResponse)(initOrCtxOrRes)) {\n                throw new TypeError(`Expected ServerResponse, got ${initOrCtxOrRes}`);\n            }\n            return requestListener(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServerResponse)(initOrCtxOrRes)) {\n            throw new TypeError('Got Node response without Node request');\n        }\n        // Is input a container object over Request?\n        if (isRequestAccessible(input)) {\n            // Is it FetchEvent?\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFetchEvent)(input)) {\n                return handleEvent(input, ...maybeCtx);\n            }\n            // In this input is also the context\n            return handleRequestWithWaitUntil(input.request, input, ...maybeCtx);\n        }\n        // Or is it Request itself?\n        // Then ctx is present and it is the context\n        return fetchFn(input, ...maybeCtx);\n    };\n    const adapterObj = {\n        handleRequest,\n        fetch: fetchFn,\n        handleNodeRequest,\n        requestListener,\n        handleEvent,\n        handle: genericRequestHandler,\n    };\n    const serverAdapter = new Proxy(genericRequestHandler, {\n        // It should have all the attributes of the handler function and the server instance\n        has: (_, prop) => {\n            return (prop in adapterObj ||\n                prop in genericRequestHandler ||\n                (serverAdapterBaseObject && prop in serverAdapterBaseObject));\n        },\n        get: (_, prop) => {\n            const adapterProp = adapterObj[prop];\n            if (adapterProp) {\n                if (adapterProp.bind) {\n                    return adapterProp.bind(adapterObj);\n                }\n                return adapterProp;\n            }\n            const handleProp = genericRequestHandler[prop];\n            if (handleProp) {\n                if (handleProp.bind) {\n                    return handleProp.bind(genericRequestHandler);\n                }\n                return handleProp;\n            }\n            if (serverAdapterBaseObject) {\n                const serverAdapterBaseObjectProp = serverAdapterBaseObject[prop];\n                if (serverAdapterBaseObjectProp) {\n                    if (serverAdapterBaseObjectProp.bind) {\n                        return function (...args) {\n                            const returnedVal = serverAdapterBaseObject[prop](...args);\n                            if (returnedVal === serverAdapterBaseObject) {\n                                return serverAdapter;\n                            }\n                            return returnedVal;\n                        };\n                    }\n                    return serverAdapterBaseObjectProp;\n                }\n            }\n        },\n        apply(_, __, args) {\n            return genericRequestHandler(...args);\n        },\n    });\n    return serverAdapter;\n}\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#copying_accessors\nfunction completeAssign(target, ...sources) {\n    sources.forEach(source => {\n        if (source != null && typeof source === 'object') {\n            // modified Object.keys to Object.getOwnPropertyNames\n            // because Object.keys only returns enumerable properties\n            const descriptors = Object.getOwnPropertyNames(source).reduce((descriptors, key) => {\n                descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n                return descriptors;\n            }, {});\n            // By default, Object.assign copies enumerable Symbols, too\n            Object.getOwnPropertySymbols(source).forEach(sym => {\n                const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n                if (descriptor.enumerable) {\n                    descriptors[sym] = descriptor;\n                }\n            });\n            Object.defineProperties(target, descriptors);\n        }\n    });\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/createServerAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useCors.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useCors.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCORSHeadersByRequestAndOptions: () => (/* binding */ getCORSHeadersByRequestAndOptions),\n/* harmony export */   useCORS: () => (/* binding */ useCORS)\n/* harmony export */ });\nfunction getCORSHeadersByRequestAndOptions(request, corsOptions) {\n    var _a, _b;\n    const currentOrigin = request.headers.get('origin');\n    if (corsOptions === false || currentOrigin == null) {\n        return null;\n    }\n    const headers = {};\n    // If defined origins have '*' or undefined by any means, we should allow all origins\n    if (corsOptions.origin == null ||\n        corsOptions.origin.length === 0 ||\n        corsOptions.origin.includes('*')) {\n        headers['Access-Control-Allow-Origin'] = currentOrigin;\n        // Vary by origin because there are multiple origins\n        headers['Vary'] = 'Origin';\n    }\n    else if (typeof corsOptions.origin === 'string') {\n        // If there is one specific origin is specified, use it directly\n        headers['Access-Control-Allow-Origin'] = corsOptions.origin;\n    }\n    else if (Array.isArray(corsOptions.origin)) {\n        // If there is only one origin defined in the array, consider it as a single one\n        if (corsOptions.origin.length === 1) {\n            headers['Access-Control-Allow-Origin'] = corsOptions.origin[0];\n        }\n        else if (corsOptions.origin.includes(currentOrigin)) {\n            // If origin is available in the headers, use it\n            headers['Access-Control-Allow-Origin'] = currentOrigin;\n            // Vary by origin because there are multiple origins\n            headers['Vary'] = 'Origin';\n        }\n        else {\n            // There is no origin found in the headers, so we should return null\n            headers['Access-Control-Allow-Origin'] = 'null';\n        }\n    }\n    if ((_a = corsOptions.methods) === null || _a === void 0 ? void 0 : _a.length) {\n        headers['Access-Control-Allow-Methods'] = corsOptions.methods.join(', ');\n    }\n    else {\n        const requestMethod = request.headers.get('access-control-request-method');\n        if (requestMethod) {\n            headers['Access-Control-Allow-Methods'] = requestMethod;\n        }\n    }\n    if ((_b = corsOptions.allowedHeaders) === null || _b === void 0 ? void 0 : _b.length) {\n        headers['Access-Control-Allow-Headers'] = corsOptions.allowedHeaders.join(', ');\n    }\n    else {\n        const requestHeaders = request.headers.get('access-control-request-headers');\n        if (requestHeaders) {\n            headers['Access-Control-Allow-Headers'] = requestHeaders;\n            if (headers['Vary']) {\n                headers['Vary'] += ', Access-Control-Request-Headers';\n            }\n            headers['Vary'] = 'Access-Control-Request-Headers';\n        }\n    }\n    if (corsOptions.credentials != null) {\n        if (corsOptions.credentials === true) {\n            headers['Access-Control-Allow-Credentials'] = 'true';\n        }\n    }\n    else if (headers['Access-Control-Allow-Origin'] !== '*') {\n        headers['Access-Control-Allow-Credentials'] = 'true';\n    }\n    if (corsOptions.exposedHeaders) {\n        headers['Access-Control-Expose-Headers'] = corsOptions.exposedHeaders.join(', ');\n    }\n    if (corsOptions.maxAge) {\n        headers['Access-Control-Max-Age'] = corsOptions.maxAge.toString();\n    }\n    return headers;\n}\nasync function getCORSResponseHeaders(request, corsOptionsFactory, serverContext) {\n    const corsOptions = await corsOptionsFactory(request, serverContext);\n    return getCORSHeadersByRequestAndOptions(request, corsOptions);\n}\nfunction useCORS(options) {\n    let corsOptionsFactory = () => ({});\n    if (options != null) {\n        if (typeof options === 'function') {\n            corsOptionsFactory = options;\n        }\n        else if (typeof options === 'object') {\n            const corsOptions = {\n                ...options,\n            };\n            corsOptionsFactory = () => corsOptions;\n        }\n        else if (options === false) {\n            corsOptionsFactory = () => false;\n        }\n    }\n    return {\n        onRequest({ request, fetchAPI, endResponse }) {\n            if (request.method.toUpperCase() === 'OPTIONS') {\n                const response = new fetchAPI.Response(null, {\n                    status: 204,\n                    // Safari (and potentially other browsers) need content-length 0,\n                    // for 204 or they just hang waiting for a body\n                    // see: https://github.com/expressjs/cors/blob/master/lib/index.js#L176\n                    headers: {\n                        'Content-Length': '0',\n                    },\n                });\n                endResponse(response);\n            }\n        },\n        async onResponse({ request, serverContext, response }) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const headers = await getCORSResponseHeaders(request, corsOptionsFactory, serverContext);\n            if (headers != null) {\n                for (const headerName in headers) {\n                    response.headers.set(headerName, headers[headerName]);\n                }\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useCors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useErrorHandling.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useErrorHandling.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTTPError: () => (/* binding */ HTTPError),\n/* harmony export */   createDefaultErrorHandler: () => (/* binding */ createDefaultErrorHandler),\n/* harmony export */   useErrorHandling: () => (/* binding */ useErrorHandling)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/.pnpm/@whatwg-node+fetch@0.8.8/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n\nfunction createDefaultErrorHandler(ResponseCtor = _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__.Response) {\n    return function defaultErrorHandler(e) {\n        return new ResponseCtor(typeof e.details === 'object'\n            ? JSON.stringify(e.details)\n            : e.stack || e.message || e.toString(), {\n            status: e.statusCode || e.status || 500,\n            headers: e.headers || {},\n        });\n    };\n}\nclass HTTPError extends Error {\n    constructor(status, message, headers = {}, details) {\n        super(message);\n        this.status = status;\n        this.message = message;\n        this.headers = headers;\n        this.details = details;\n        Error.captureStackTrace(this, HTTPError);\n    }\n}\nfunction useErrorHandling(onError) {\n    return {\n        onRequest({ requestHandler, setRequestHandler, fetchAPI }) {\n            const errorHandler = onError || createDefaultErrorHandler(fetchAPI.Response);\n            setRequestHandler(async function handlerWithErrorHandling(request, serverContext) {\n                try {\n                    const response = await requestHandler(request, serverContext);\n                    return response;\n                }\n                catch (e) {\n                    const response = await errorHandler(e, request, serverContext);\n                    return response;\n                }\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdoYXR3Zy1ub2RlK3NlcnZlckAwLjcuNy9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9lc20vcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUU7QUFDOUQsa0RBQWtELHdEQUFtQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLFNBQVM7QUFDVDtBQUNBO0FBQ087QUFDUCw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsNkNBQTZDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hZDE5L0RvY3VtZW50cy9hbnNhcm0tZmlsZS1zZXJ2ZXIvbm9kZV9tb2R1bGVzLy5wbnBtL0B3aGF0d2ctbm9kZStzZXJ2ZXJAMC43Ljcvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvZXNtL3BsdWdpbnMvdXNlRXJyb3JIYW5kbGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNwb25zZSBhcyBEZWZhdWx0UmVzcG9uc2VDdG9yIH0gZnJvbSAnQHdoYXR3Zy1ub2RlL2ZldGNoJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0RXJyb3JIYW5kbGVyKFJlc3BvbnNlQ3RvciA9IERlZmF1bHRSZXNwb25zZUN0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZGVmYXVsdEVycm9ySGFuZGxlcihlKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2VDdG9yKHR5cGVvZiBlLmRldGFpbHMgPT09ICdvYmplY3QnXG4gICAgICAgICAgICA/IEpTT04uc3RyaW5naWZ5KGUuZGV0YWlscylcbiAgICAgICAgICAgIDogZS5zdGFjayB8fCBlLm1lc3NhZ2UgfHwgZS50b1N0cmluZygpLCB7XG4gICAgICAgICAgICBzdGF0dXM6IGUuc3RhdHVzQ29kZSB8fCBlLnN0YXR1cyB8fCA1MDAsXG4gICAgICAgICAgICBoZWFkZXJzOiBlLmhlYWRlcnMgfHwge30sXG4gICAgICAgIH0pO1xuICAgIH07XG59XG5leHBvcnQgY2xhc3MgSFRUUEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHN0YXR1cywgbWVzc2FnZSwgaGVhZGVycyA9IHt9LCBkZXRhaWxzKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gZGV0YWlscztcbiAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgSFRUUEVycm9yKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlRXJyb3JIYW5kbGluZyhvbkVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25SZXF1ZXN0KHsgcmVxdWVzdEhhbmRsZXIsIHNldFJlcXVlc3RIYW5kbGVyLCBmZXRjaEFQSSB9KSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvckhhbmRsZXIgPSBvbkVycm9yIHx8IGNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXIoZmV0Y2hBUEkuUmVzcG9uc2UpO1xuICAgICAgICAgICAgc2V0UmVxdWVzdEhhbmRsZXIoYXN5bmMgZnVuY3Rpb24gaGFuZGxlcldpdGhFcnJvckhhbmRsaW5nKHJlcXVlc3QsIHNlcnZlckNvbnRleHQpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3RIYW5kbGVyKHJlcXVlc3QsIHNlcnZlckNvbnRleHQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZXJyb3JIYW5kbGVyKGUsIHJlcXVlc3QsIHNlcnZlckNvbnRleHQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/plugins/useErrorHandling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/utils.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/utils.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeadersObj: () => (/* binding */ getHeadersObj),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   isFetchEvent: () => (/* binding */ isFetchEvent),\n/* harmony export */   isNodeRequest: () => (/* binding */ isNodeRequest),\n/* harmony export */   isReadable: () => (/* binding */ isReadable),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isRequestInit: () => (/* binding */ isRequestInit),\n/* harmony export */   isServerResponse: () => (/* binding */ isServerResponse),\n/* harmony export */   normalizeNodeRequest: () => (/* binding */ normalizeNodeRequest),\n/* harmony export */   sendNodeResponse: () => (/* binding */ sendNodeResponse)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/.pnpm/@whatwg-node+fetch@0.8.8/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n\nfunction isAsyncIterable(body) {\n    return (body != null && typeof body === 'object' && typeof body[Symbol.asyncIterator] === 'function');\n}\nfunction getPort(nodeRequest) {\n    var _a, _b, _c, _d, _e;\n    if ((_a = nodeRequest.socket) === null || _a === void 0 ? void 0 : _a.localPort) {\n        return (_b = nodeRequest.socket) === null || _b === void 0 ? void 0 : _b.localPort;\n    }\n    const hostInHeader = ((_c = nodeRequest.headers) === null || _c === void 0 ? void 0 : _c[':authority']) || ((_d = nodeRequest.headers) === null || _d === void 0 ? void 0 : _d.host);\n    const portInHeader = (_e = hostInHeader === null || hostInHeader === void 0 ? void 0 : hostInHeader.split(':')) === null || _e === void 0 ? void 0 : _e[1];\n    if (portInHeader) {\n        return portInHeader;\n    }\n    return 80;\n}\nfunction getHostnameWithPort(nodeRequest) {\n    var _a, _b, _c, _d, _e;\n    if ((_a = nodeRequest.headers) === null || _a === void 0 ? void 0 : _a[':authority']) {\n        return (_b = nodeRequest.headers) === null || _b === void 0 ? void 0 : _b[':authority'];\n    }\n    if ((_c = nodeRequest.headers) === null || _c === void 0 ? void 0 : _c.host) {\n        return (_d = nodeRequest.headers) === null || _d === void 0 ? void 0 : _d.host;\n    }\n    const port = getPort(nodeRequest);\n    if (nodeRequest.hostname) {\n        return nodeRequest.hostname + ':' + port;\n    }\n    const localIp = (_e = nodeRequest.socket) === null || _e === void 0 ? void 0 : _e.localAddress;\n    if (localIp && !(localIp === null || localIp === void 0 ? void 0 : localIp.includes('::')) && !(localIp === null || localIp === void 0 ? void 0 : localIp.includes('ffff'))) {\n        return `${localIp}:${port}`;\n    }\n    return 'localhost';\n}\nfunction buildFullUrl(nodeRequest) {\n    const hostnameWithPort = getHostnameWithPort(nodeRequest);\n    const protocol = nodeRequest.protocol || 'http';\n    const endpoint = nodeRequest.originalUrl || nodeRequest.url || '/graphql';\n    return `${protocol}://${hostnameWithPort}${endpoint}`;\n}\nfunction isRequestBody(body) {\n    const stringTag = body[Symbol.toStringTag];\n    if (typeof body === 'string' ||\n        stringTag === 'Uint8Array' ||\n        stringTag === 'Blob' ||\n        stringTag === 'FormData' ||\n        stringTag === 'URLSearchParams' ||\n        isAsyncIterable(body)) {\n        return true;\n    }\n    return false;\n}\nfunction normalizeNodeRequest(nodeRequest, RequestCtor) {\n    var _a;\n    const rawRequest = nodeRequest.raw || nodeRequest.req || nodeRequest;\n    let fullUrl = buildFullUrl(rawRequest);\n    if (nodeRequest.query) {\n        const url = new _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__.URL(fullUrl);\n        for (const key in nodeRequest.query) {\n            url.searchParams.set(key, nodeRequest.query[key]);\n        }\n        fullUrl = url.toString();\n    }\n    if (nodeRequest.method === 'GET' || nodeRequest.method === 'HEAD') {\n        return new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: nodeRequest.headers,\n        });\n    }\n    /**\n     * Some Node server frameworks like Serverless Express sends a dummy object with body but as a Buffer not string\n     * so we do those checks to see is there something we can use directly as BodyInit\n     * because the presence of body means the request stream is already consumed and,\n     * rawRequest cannot be used as BodyInit/ReadableStream by Fetch API in this case.\n     */\n    const maybeParsedBody = nodeRequest.body;\n    if (maybeParsedBody != null && Object.keys(maybeParsedBody).length > 0) {\n        if (isRequestBody(maybeParsedBody)) {\n            return new RequestCtor(fullUrl, {\n                method: nodeRequest.method,\n                headers: nodeRequest.headers,\n                body: maybeParsedBody,\n            });\n        }\n        const request = new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: nodeRequest.headers,\n        });\n        if (!((_a = request.headers.get('content-type')) === null || _a === void 0 ? void 0 : _a.includes('json'))) {\n            request.headers.set('content-type', 'application/json');\n        }\n        return new Proxy(request, {\n            get: (target, prop, receiver) => {\n                switch (prop) {\n                    case 'json':\n                        return async () => maybeParsedBody;\n                    case 'text':\n                        return async () => JSON.stringify(maybeParsedBody);\n                    default:\n                        return Reflect.get(target, prop, receiver);\n                }\n            },\n        });\n    }\n    // perf: instead of spreading the object, we can just pass it as is and it performs better\n    return new RequestCtor(fullUrl, {\n        method: nodeRequest.method,\n        headers: nodeRequest.headers,\n        body: rawRequest,\n    });\n}\nfunction isReadable(stream) {\n    return stream.read != null;\n}\nfunction isNodeRequest(request) {\n    return isReadable(request);\n}\nfunction isServerResponse(stream) {\n    // Check all used functions are defined\n    return (stream != null &&\n        stream.setHeader != null &&\n        stream.end != null &&\n        stream.once != null &&\n        stream.write != null);\n}\nfunction isReadableStream(stream) {\n    return stream != null && stream.getReader != null;\n}\nfunction isFetchEvent(event) {\n    return event != null && event.request != null && event.respondWith != null;\n}\nfunction configureSocket(rawRequest) {\n    var _a, _b, _c, _d, _e, _f;\n    (_b = (_a = rawRequest === null || rawRequest === void 0 ? void 0 : rawRequest.socket) === null || _a === void 0 ? void 0 : _a.setTimeout) === null || _b === void 0 ? void 0 : _b.call(_a, 0);\n    (_d = (_c = rawRequest === null || rawRequest === void 0 ? void 0 : rawRequest.socket) === null || _c === void 0 ? void 0 : _c.setNoDelay) === null || _d === void 0 ? void 0 : _d.call(_c, true);\n    (_f = (_e = rawRequest === null || rawRequest === void 0 ? void 0 : rawRequest.socket) === null || _e === void 0 ? void 0 : _e.setKeepAlive) === null || _f === void 0 ? void 0 : _f.call(_e, true);\n}\nfunction endResponse(serverResponse) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    serverResponse.end(null, null, null);\n}\nfunction getHeadersObj(headers) {\n    return new Proxy({}, {\n        get(_target, prop) {\n            return headers.get(prop) || undefined;\n        },\n        set(_target, prop, value) {\n            headers.set(prop, value);\n            return true;\n        },\n        has(_target, prop) {\n            return headers.has(prop);\n        },\n        deleteProperty(_target, prop) {\n            headers.delete(prop);\n            return true;\n        },\n        ownKeys() {\n            const keys = [];\n            headers.forEach((_, key) => keys.push(key));\n            return keys;\n        },\n        getOwnPropertyDescriptor() {\n            return {\n                enumerable: true,\n                configurable: true,\n            };\n        },\n    });\n}\nasync function sendNodeResponse(fetchResponse, serverResponse, nodeRequest) {\n    const headersObj = getHeadersObj(fetchResponse.headers);\n    serverResponse.writeHead(fetchResponse.status, fetchResponse.statusText, headersObj);\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve) => {\n        serverResponse.once('close', resolve);\n        // Our Node-fetch enhancements\n        if ('bodyType' in fetchResponse &&\n            fetchResponse.bodyType != null &&\n            (fetchResponse.bodyType === 'String' || fetchResponse.bodyType === 'Uint8Array')) {\n            // @ts-expect-error http and http2 writes are actually compatible\n            serverResponse.write(fetchResponse.bodyInit);\n            endResponse(serverResponse);\n            return;\n        }\n        // Other fetch implementations\n        const fetchBody = fetchResponse.body;\n        if (fetchBody == null) {\n            endResponse(serverResponse);\n            return;\n        }\n        if (fetchBody[Symbol.toStringTag] === 'Uint8Array') {\n            serverResponse\n                // @ts-expect-error http and http2 writes are actually compatible\n                .write(fetchBody);\n            endResponse(serverResponse);\n            return;\n        }\n        configureSocket(nodeRequest);\n        if (isReadable(fetchBody)) {\n            serverResponse.once('close', () => {\n                fetchBody.destroy();\n            });\n            fetchBody.pipe(serverResponse);\n            return;\n        }\n        if (isAsyncIterable(fetchBody)) {\n            for await (const chunk of fetchBody) {\n                if (!serverResponse\n                    // @ts-expect-error http and http2 writes are actually compatible\n                    .write(chunk)) {\n                    break;\n                }\n            }\n            endResponse(serverResponse);\n        }\n    });\n}\nfunction isRequestInit(val) {\n    return (val != null &&\n        typeof val === 'object' &&\n        ('body' in val ||\n            'cache' in val ||\n            'credentials' in val ||\n            'headers' in val ||\n            'integrity' in val ||\n            'keepalive' in val ||\n            'method' in val ||\n            'mode' in val ||\n            'redirect' in val ||\n            'referrer' in val ||\n            'referrerPolicy' in val ||\n            'signal' in val ||\n            'window' in val));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdoYXR3Zy1ub2RlK3NlcnZlckAwLjcuNy9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9lc20vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixRQUFRLEdBQUcsS0FBSztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUyxLQUFLLGlCQUFpQixFQUFFLFNBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1EQUFHO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hZDE5L0RvY3VtZW50cy9hbnNhcm0tZmlsZS1zZXJ2ZXIvbm9kZV9tb2R1bGVzLy5wbnBtL0B3aGF0d2ctbm9kZStzZXJ2ZXJAMC43Ljcvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvZXNtL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVSTCB9IGZyb20gJ0B3aGF0d2ctbm9kZS9mZXRjaCc7XG5leHBvcnQgZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKGJvZHkpIHtcbiAgICByZXR1cm4gKGJvZHkgIT0gbnVsbCAmJiB0eXBlb2YgYm9keSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGJvZHlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID09PSAnZnVuY3Rpb24nKTtcbn1cbmZ1bmN0aW9uIGdldFBvcnQobm9kZVJlcXVlc3QpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgIGlmICgoX2EgPSBub2RlUmVxdWVzdC5zb2NrZXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sb2NhbFBvcnQpIHtcbiAgICAgICAgcmV0dXJuIChfYiA9IG5vZGVSZXF1ZXN0LnNvY2tldCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxvY2FsUG9ydDtcbiAgICB9XG4gICAgY29uc3QgaG9zdEluSGVhZGVyID0gKChfYyA9IG5vZGVSZXF1ZXN0LmhlYWRlcnMpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY1snOmF1dGhvcml0eSddKSB8fCAoKF9kID0gbm9kZVJlcXVlc3QuaGVhZGVycykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmhvc3QpO1xuICAgIGNvbnN0IHBvcnRJbkhlYWRlciA9IChfZSA9IGhvc3RJbkhlYWRlciA9PT0gbnVsbCB8fCBob3N0SW5IZWFkZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGhvc3RJbkhlYWRlci5zcGxpdCgnOicpKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2VbMV07XG4gICAgaWYgKHBvcnRJbkhlYWRlcikge1xuICAgICAgICByZXR1cm4gcG9ydEluSGVhZGVyO1xuICAgIH1cbiAgICByZXR1cm4gODA7XG59XG5mdW5jdGlvbiBnZXRIb3N0bmFtZVdpdGhQb3J0KG5vZGVSZXF1ZXN0KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgICBpZiAoKF9hID0gbm9kZVJlcXVlc3QuaGVhZGVycykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWyc6YXV0aG9yaXR5J10pIHtcbiAgICAgICAgcmV0dXJuIChfYiA9IG5vZGVSZXF1ZXN0LmhlYWRlcnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYlsnOmF1dGhvcml0eSddO1xuICAgIH1cbiAgICBpZiAoKF9jID0gbm9kZVJlcXVlc3QuaGVhZGVycykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmhvc3QpIHtcbiAgICAgICAgcmV0dXJuIChfZCA9IG5vZGVSZXF1ZXN0LmhlYWRlcnMpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5ob3N0O1xuICAgIH1cbiAgICBjb25zdCBwb3J0ID0gZ2V0UG9ydChub2RlUmVxdWVzdCk7XG4gICAgaWYgKG5vZGVSZXF1ZXN0Lmhvc3RuYW1lKSB7XG4gICAgICAgIHJldHVybiBub2RlUmVxdWVzdC5ob3N0bmFtZSArICc6JyArIHBvcnQ7XG4gICAgfVxuICAgIGNvbnN0IGxvY2FsSXAgPSAoX2UgPSBub2RlUmVxdWVzdC5zb2NrZXQpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5sb2NhbEFkZHJlc3M7XG4gICAgaWYgKGxvY2FsSXAgJiYgIShsb2NhbElwID09PSBudWxsIHx8IGxvY2FsSXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGxvY2FsSXAuaW5jbHVkZXMoJzo6JykpICYmICEobG9jYWxJcCA9PT0gbnVsbCB8fCBsb2NhbElwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsb2NhbElwLmluY2x1ZGVzKCdmZmZmJykpKSB7XG4gICAgICAgIHJldHVybiBgJHtsb2NhbElwfToke3BvcnR9YDtcbiAgICB9XG4gICAgcmV0dXJuICdsb2NhbGhvc3QnO1xufVxuZnVuY3Rpb24gYnVpbGRGdWxsVXJsKG5vZGVSZXF1ZXN0KSB7XG4gICAgY29uc3QgaG9zdG5hbWVXaXRoUG9ydCA9IGdldEhvc3RuYW1lV2l0aFBvcnQobm9kZVJlcXVlc3QpO1xuICAgIGNvbnN0IHByb3RvY29sID0gbm9kZVJlcXVlc3QucHJvdG9jb2wgfHwgJ2h0dHAnO1xuICAgIGNvbnN0IGVuZHBvaW50ID0gbm9kZVJlcXVlc3Qub3JpZ2luYWxVcmwgfHwgbm9kZVJlcXVlc3QudXJsIHx8ICcvZ3JhcGhxbCc7XG4gICAgcmV0dXJuIGAke3Byb3RvY29sfTovLyR7aG9zdG5hbWVXaXRoUG9ydH0ke2VuZHBvaW50fWA7XG59XG5mdW5jdGlvbiBpc1JlcXVlc3RCb2R5KGJvZHkpIHtcbiAgICBjb25zdCBzdHJpbmdUYWcgPSBib2R5W1N5bWJvbC50b1N0cmluZ1RhZ107XG4gICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJyB8fFxuICAgICAgICBzdHJpbmdUYWcgPT09ICdVaW50OEFycmF5JyB8fFxuICAgICAgICBzdHJpbmdUYWcgPT09ICdCbG9iJyB8fFxuICAgICAgICBzdHJpbmdUYWcgPT09ICdGb3JtRGF0YScgfHxcbiAgICAgICAgc3RyaW5nVGFnID09PSAnVVJMU2VhcmNoUGFyYW1zJyB8fFxuICAgICAgICBpc0FzeW5jSXRlcmFibGUoYm9keSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVOb2RlUmVxdWVzdChub2RlUmVxdWVzdCwgUmVxdWVzdEN0b3IpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcmF3UmVxdWVzdCA9IG5vZGVSZXF1ZXN0LnJhdyB8fCBub2RlUmVxdWVzdC5yZXEgfHwgbm9kZVJlcXVlc3Q7XG4gICAgbGV0IGZ1bGxVcmwgPSBidWlsZEZ1bGxVcmwocmF3UmVxdWVzdCk7XG4gICAgaWYgKG5vZGVSZXF1ZXN0LnF1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoZnVsbFVybCk7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIG5vZGVSZXF1ZXN0LnF1ZXJ5KSB7XG4gICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChrZXksIG5vZGVSZXF1ZXN0LnF1ZXJ5W2tleV0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bGxVcmwgPSB1cmwudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKG5vZGVSZXF1ZXN0Lm1ldGhvZCA9PT0gJ0dFVCcgfHwgbm9kZVJlcXVlc3QubWV0aG9kID09PSAnSEVBRCcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0Q3RvcihmdWxsVXJsLCB7XG4gICAgICAgICAgICBtZXRob2Q6IG5vZGVSZXF1ZXN0Lm1ldGhvZCxcbiAgICAgICAgICAgIGhlYWRlcnM6IG5vZGVSZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTb21lIE5vZGUgc2VydmVyIGZyYW1ld29ya3MgbGlrZSBTZXJ2ZXJsZXNzIEV4cHJlc3Mgc2VuZHMgYSBkdW1teSBvYmplY3Qgd2l0aCBib2R5IGJ1dCBhcyBhIEJ1ZmZlciBub3Qgc3RyaW5nXG4gICAgICogc28gd2UgZG8gdGhvc2UgY2hlY2tzIHRvIHNlZSBpcyB0aGVyZSBzb21ldGhpbmcgd2UgY2FuIHVzZSBkaXJlY3RseSBhcyBCb2R5SW5pdFxuICAgICAqIGJlY2F1c2UgdGhlIHByZXNlbmNlIG9mIGJvZHkgbWVhbnMgdGhlIHJlcXVlc3Qgc3RyZWFtIGlzIGFscmVhZHkgY29uc3VtZWQgYW5kLFxuICAgICAqIHJhd1JlcXVlc3QgY2Fubm90IGJlIHVzZWQgYXMgQm9keUluaXQvUmVhZGFibGVTdHJlYW0gYnkgRmV0Y2ggQVBJIGluIHRoaXMgY2FzZS5cbiAgICAgKi9cbiAgICBjb25zdCBtYXliZVBhcnNlZEJvZHkgPSBub2RlUmVxdWVzdC5ib2R5O1xuICAgIGlmIChtYXliZVBhcnNlZEJvZHkgIT0gbnVsbCAmJiBPYmplY3Qua2V5cyhtYXliZVBhcnNlZEJvZHkpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdEJvZHkobWF5YmVQYXJzZWRCb2R5KSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0Q3RvcihmdWxsVXJsLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiBub2RlUmVxdWVzdC5tZXRob2QsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogbm9kZVJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgICAgICAgICBib2R5OiBtYXliZVBhcnNlZEJvZHksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3RDdG9yKGZ1bGxVcmwsIHtcbiAgICAgICAgICAgIG1ldGhvZDogbm9kZVJlcXVlc3QubWV0aG9kLFxuICAgICAgICAgICAgaGVhZGVyczogbm9kZVJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghKChfYSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaW5jbHVkZXMoJ2pzb24nKSkpIHtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoJ2NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eShyZXF1ZXN0LCB7XG4gICAgICAgICAgICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChwcm9wKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2pzb24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFzeW5jICgpID0+IG1heWJlUGFyc2VkQm9keTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAndGV4dCc6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXN5bmMgKCkgPT4gSlNPTi5zdHJpbmdpZnkobWF5YmVQYXJzZWRCb2R5KTtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gcGVyZjogaW5zdGVhZCBvZiBzcHJlYWRpbmcgdGhlIG9iamVjdCwgd2UgY2FuIGp1c3QgcGFzcyBpdCBhcyBpcyBhbmQgaXQgcGVyZm9ybXMgYmV0dGVyXG4gICAgcmV0dXJuIG5ldyBSZXF1ZXN0Q3RvcihmdWxsVXJsLCB7XG4gICAgICAgIG1ldGhvZDogbm9kZVJlcXVlc3QubWV0aG9kLFxuICAgICAgICBoZWFkZXJzOiBub2RlUmVxdWVzdC5oZWFkZXJzLFxuICAgICAgICBib2R5OiByYXdSZXF1ZXN0LFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVhZGFibGUoc3RyZWFtKSB7XG4gICAgcmV0dXJuIHN0cmVhbS5yZWFkICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGlzUmVhZGFibGUocmVxdWVzdCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTZXJ2ZXJSZXNwb25zZShzdHJlYW0pIHtcbiAgICAvLyBDaGVjayBhbGwgdXNlZCBmdW5jdGlvbnMgYXJlIGRlZmluZWRcbiAgICByZXR1cm4gKHN0cmVhbSAhPSBudWxsICYmXG4gICAgICAgIHN0cmVhbS5zZXRIZWFkZXIgIT0gbnVsbCAmJlxuICAgICAgICBzdHJlYW0uZW5kICE9IG51bGwgJiZcbiAgICAgICAgc3RyZWFtLm9uY2UgIT0gbnVsbCAmJlxuICAgICAgICBzdHJlYW0ud3JpdGUgIT0gbnVsbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZWFkYWJsZVN0cmVhbShzdHJlYW0pIHtcbiAgICByZXR1cm4gc3RyZWFtICE9IG51bGwgJiYgc3RyZWFtLmdldFJlYWRlciAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRmV0Y2hFdmVudChldmVudCkge1xuICAgIHJldHVybiBldmVudCAhPSBudWxsICYmIGV2ZW50LnJlcXVlc3QgIT0gbnVsbCAmJiBldmVudC5yZXNwb25kV2l0aCAhPSBudWxsO1xufVxuZnVuY3Rpb24gY29uZmlndXJlU29ja2V0KHJhd1JlcXVlc3QpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgICAoX2IgPSAoX2EgPSByYXdSZXF1ZXN0ID09PSBudWxsIHx8IHJhd1JlcXVlc3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJhd1JlcXVlc3Quc29ja2V0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2V0VGltZW91dCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIDApO1xuICAgIChfZCA9IChfYyA9IHJhd1JlcXVlc3QgPT09IG51bGwgfHwgcmF3UmVxdWVzdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmF3UmVxdWVzdC5zb2NrZXQpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5zZXROb0RlbGF5KSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuY2FsbChfYywgdHJ1ZSk7XG4gICAgKF9mID0gKF9lID0gcmF3UmVxdWVzdCA9PT0gbnVsbCB8fCByYXdSZXF1ZXN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiByYXdSZXF1ZXN0LnNvY2tldCkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLnNldEtlZXBBbGl2ZSkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmNhbGwoX2UsIHRydWUpO1xufVxuZnVuY3Rpb24gZW5kUmVzcG9uc2Uoc2VydmVyUmVzcG9uc2UpIHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIEF2b2lkIGFyZ3VtZW50cyBhZGFwdG9yIHRyYW1wb2xpbmUgaHR0cHM6Ly92OC5kZXYvYmxvZy9hZGFwdG9yLWZyYW1lXG4gICAgc2VydmVyUmVzcG9uc2UuZW5kKG51bGwsIG51bGwsIG51bGwpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEhlYWRlcnNPYmooaGVhZGVycykge1xuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0KF90YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgIHJldHVybiBoZWFkZXJzLmdldChwcm9wKSB8fCB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldChfdGFyZ2V0LCBwcm9wLCB2YWx1ZSkge1xuICAgICAgICAgICAgaGVhZGVycy5zZXQocHJvcCwgdmFsdWUpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGhhcyhfdGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgICAgICByZXR1cm4gaGVhZGVycy5oYXMocHJvcCk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGV0ZVByb3BlcnR5KF90YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgIGhlYWRlcnMuZGVsZXRlKHByb3ApO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIG93bktleXMoKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzID0gW107XG4gICAgICAgICAgICBoZWFkZXJzLmZvckVhY2goKF8sIGtleSkgPT4ga2V5cy5wdXNoKGtleSkpO1xuICAgICAgICAgICAgcmV0dXJuIGtleXM7XG4gICAgICAgIH0sXG4gICAgICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcigpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmROb2RlUmVzcG9uc2UoZmV0Y2hSZXNwb25zZSwgc2VydmVyUmVzcG9uc2UsIG5vZGVSZXF1ZXN0KSB7XG4gICAgY29uc3QgaGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmooZmV0Y2hSZXNwb25zZS5oZWFkZXJzKTtcbiAgICBzZXJ2ZXJSZXNwb25zZS53cml0ZUhlYWQoZmV0Y2hSZXNwb25zZS5zdGF0dXMsIGZldGNoUmVzcG9uc2Uuc3RhdHVzVGV4dCwgaGVhZGVyc09iaik7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWFzeW5jLXByb21pc2UtZXhlY3V0b3JcbiAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2VydmVyUmVzcG9uc2Uub25jZSgnY2xvc2UnLCByZXNvbHZlKTtcbiAgICAgICAgLy8gT3VyIE5vZGUtZmV0Y2ggZW5oYW5jZW1lbnRzXG4gICAgICAgIGlmICgnYm9keVR5cGUnIGluIGZldGNoUmVzcG9uc2UgJiZcbiAgICAgICAgICAgIGZldGNoUmVzcG9uc2UuYm9keVR5cGUgIT0gbnVsbCAmJlxuICAgICAgICAgICAgKGZldGNoUmVzcG9uc2UuYm9keVR5cGUgPT09ICdTdHJpbmcnIHx8IGZldGNoUmVzcG9uc2UuYm9keVR5cGUgPT09ICdVaW50OEFycmF5JykpIHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgaHR0cCBhbmQgaHR0cDIgd3JpdGVzIGFyZSBhY3R1YWxseSBjb21wYXRpYmxlXG4gICAgICAgICAgICBzZXJ2ZXJSZXNwb25zZS53cml0ZShmZXRjaFJlc3BvbnNlLmJvZHlJbml0KTtcbiAgICAgICAgICAgIGVuZFJlc3BvbnNlKHNlcnZlclJlc3BvbnNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBPdGhlciBmZXRjaCBpbXBsZW1lbnRhdGlvbnNcbiAgICAgICAgY29uc3QgZmV0Y2hCb2R5ID0gZmV0Y2hSZXNwb25zZS5ib2R5O1xuICAgICAgICBpZiAoZmV0Y2hCb2R5ID09IG51bGwpIHtcbiAgICAgICAgICAgIGVuZFJlc3BvbnNlKHNlcnZlclJlc3BvbnNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZmV0Y2hCb2R5W1N5bWJvbC50b1N0cmluZ1RhZ10gPT09ICdVaW50OEFycmF5Jykge1xuICAgICAgICAgICAgc2VydmVyUmVzcG9uc2VcbiAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGh0dHAgYW5kIGh0dHAyIHdyaXRlcyBhcmUgYWN0dWFsbHkgY29tcGF0aWJsZVxuICAgICAgICAgICAgICAgIC53cml0ZShmZXRjaEJvZHkpO1xuICAgICAgICAgICAgZW5kUmVzcG9uc2Uoc2VydmVyUmVzcG9uc2UpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbmZpZ3VyZVNvY2tldChub2RlUmVxdWVzdCk7XG4gICAgICAgIGlmIChpc1JlYWRhYmxlKGZldGNoQm9keSkpIHtcbiAgICAgICAgICAgIHNlcnZlclJlc3BvbnNlLm9uY2UoJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGZldGNoQm9keS5kZXN0cm95KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGZldGNoQm9keS5waXBlKHNlcnZlclJlc3BvbnNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBc3luY0l0ZXJhYmxlKGZldGNoQm9keSkpIHtcbiAgICAgICAgICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgZmV0Y2hCb2R5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZXJ2ZXJSZXNwb25zZVxuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGh0dHAgYW5kIGh0dHAyIHdyaXRlcyBhcmUgYWN0dWFsbHkgY29tcGF0aWJsZVxuICAgICAgICAgICAgICAgICAgICAud3JpdGUoY2h1bmspKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVuZFJlc3BvbnNlKHNlcnZlclJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVxdWVzdEluaXQodmFsKSB7XG4gICAgcmV0dXJuICh2YWwgIT0gbnVsbCAmJlxuICAgICAgICB0eXBlb2YgdmFsID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAoJ2JvZHknIGluIHZhbCB8fFxuICAgICAgICAgICAgJ2NhY2hlJyBpbiB2YWwgfHxcbiAgICAgICAgICAgICdjcmVkZW50aWFscycgaW4gdmFsIHx8XG4gICAgICAgICAgICAnaGVhZGVycycgaW4gdmFsIHx8XG4gICAgICAgICAgICAnaW50ZWdyaXR5JyBpbiB2YWwgfHxcbiAgICAgICAgICAgICdrZWVwYWxpdmUnIGluIHZhbCB8fFxuICAgICAgICAgICAgJ21ldGhvZCcgaW4gdmFsIHx8XG4gICAgICAgICAgICAnbW9kZScgaW4gdmFsIHx8XG4gICAgICAgICAgICAncmVkaXJlY3QnIGluIHZhbCB8fFxuICAgICAgICAgICAgJ3JlZmVycmVyJyBpbiB2YWwgfHxcbiAgICAgICAgICAgICdyZWZlcnJlclBvbGljeScgaW4gdmFsIHx8XG4gICAgICAgICAgICAnc2lnbmFsJyBpbiB2YWwgfHxcbiAgICAgICAgICAgICd3aW5kb3cnIGluIHZhbCkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@whatwg-node+server@0.7.7/node_modules/@whatwg-node/server/esm/utils.js\n");

/***/ })

};
;