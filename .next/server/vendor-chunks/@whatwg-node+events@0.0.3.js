/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@whatwg-node+events@0.0.3";
exports.ids = ["vendor-chunks/@whatwg-node+events@0.0.3"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@whatwg-node+events@0.0.3/node_modules/@whatwg-node/events/dist/node-ponyfill.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@whatwg-node+events@0.0.3/node_modules/@whatwg-node/events/dist/node-ponyfill.js ***!
  \*************************************************************************************************************/
/***/ ((module) => {

eval("module.exports.Event = globalThis.Event;\nif (!module.exports.Event) {\n  module.exports.Event = class Event {\n    constructor(type, options) {\n      this.bubbles = !!options && !!options.bubbles;\n      this.cancelable = !!options && !!options.cancelable;\n      this.composed = !!options && !!options.composed;\n      this.type = type;\n    }\n  }\n}\n\nmodule.exports.EventTarget = globalThis.EventTarget;\nif (!module.exports.EventTarget) {\n  module.exports.EventTarget = class EventTarget {\n    constructor() {\n      this.__listeners = new Map();\n    }\n    addEventListener(type, listener, options) {\n      if (arguments.length < 2) {\n        throw new TypeError(\n          `TypeError: Failed to execute 'addEventListener' on 'EventTarget': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const __listeners = this.__listeners;\n      const actualType = type.toString();\n      if (!__listeners.has(actualType)) {\n        __listeners.set(actualType, new Map());\n      }\n      const listenersForType = __listeners.get(actualType);\n      if (!listenersForType.has(listener)) {\n        // Any given listener is only registered once\n        listenersForType.set(listener, options);\n      }\n    }\n    removeEventListener(type, listener, _options) {\n      if (arguments.length < 2) {\n        throw new TypeError(\n          `TypeError: Failed to execute 'addEventListener' on 'EventTarget': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const __listeners = this.__listeners;\n      const actualType = type.toString();\n      if (__listeners.has(actualType)) {\n        const listenersForType = __listeners.get(actualType);\n        if (listenersForType.has(listener)) {\n          listenersForType.delete(listener);\n        }\n      }\n    }\n    dispatchEvent(event) {\n      if (!(event instanceof module.exports.Event)) {\n        throw new TypeError(\n          `Failed to execute 'dispatchEvent' on 'EventTarget': parameter 1 is not of type 'Event'.`\n        );\n      }\n      const type = event.type;\n      const __listeners = this.__listeners;\n      const listenersForType = __listeners.get(type);\n      if (listenersForType) {\n        for (const [listener, options] of listenersForType.entries()) {\n          try {\n            if (typeof listener === \"function\") {\n              // Listener functions must be executed with the EventTarget as the `this` context.\n              listener.call(this, event);\n            } else if (listener && typeof listener.handleEvent === \"function\") {\n              // Listener objects have their handleEvent method called, if they have one\n              listener.handleEvent(event);\n            }\n          } catch (err) {\n            // We need to report the error to the global error handling event,\n            // but we do not want to break the loop that is executing the events.\n            // Unfortunately, this is the best we can do, which isn't great, because the\n            // native EventTarget will actually do this synchronously before moving to the next\n            // event in the loop.\n            setTimeout(() => {\n              throw err;\n            });\n          }\n          if (options && options.once) {\n            // If this was registered with { once: true }, we need\n            // to remove it now.\n            listenersForType.delete(listener);\n          }\n        }\n      }\n      // Since there are no cancellable events on a base EventTarget,\n      // this should always return true.\n      return true;\n    }\n  }\n}\n\nmodule.exports.CustomEvent = globalThis.CustomEvent;\nif (!module.exports.CustomEvent) {\n  module.exports.CustomEvent = class CustomEvent extends module.exports.Event {\n    constructor(type, options) {\n      super(type, options);\n      this.detail = options && options.detail;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdoYXR3Zy1ub2RlK2V2ZW50c0AwLjAuMy9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9kaXN0L25vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCO0FBQ0EsRUFBRSxvQkFBb0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUI7QUFDQSxFQUFFLDBCQUEwQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4R0FBOEcsa0JBQWtCO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEdBQThHLGtCQUFrQjtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsNkNBQTZDLFlBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUI7QUFDQSxFQUFFLDBCQUEwQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2FkMTkvRG9jdW1lbnRzL2Fuc2FybS1maWxlLXNlcnZlci9ub2RlX21vZHVsZXMvLnBucG0vQHdoYXR3Zy1ub2RlK2V2ZW50c0AwLjAuMy9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9kaXN0L25vZGUtcG9ueWZpbGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMuRXZlbnQgPSBnbG9iYWxUaGlzLkV2ZW50O1xuaWYgKCFtb2R1bGUuZXhwb3J0cy5FdmVudCkge1xuICBtb2R1bGUuZXhwb3J0cy5FdmVudCA9IGNsYXNzIEV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCBvcHRpb25zKSB7XG4gICAgICB0aGlzLmJ1YmJsZXMgPSAhIW9wdGlvbnMgJiYgISFvcHRpb25zLmJ1YmJsZXM7XG4gICAgICB0aGlzLmNhbmNlbGFibGUgPSAhIW9wdGlvbnMgJiYgISFvcHRpb25zLmNhbmNlbGFibGU7XG4gICAgICB0aGlzLmNvbXBvc2VkID0gISFvcHRpb25zICYmICEhb3B0aW9ucy5jb21wb3NlZDtcbiAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzLkV2ZW50VGFyZ2V0ID0gZ2xvYmFsVGhpcy5FdmVudFRhcmdldDtcbmlmICghbW9kdWxlLmV4cG9ydHMuRXZlbnRUYXJnZXQpIHtcbiAgbW9kdWxlLmV4cG9ydHMuRXZlbnRUYXJnZXQgPSBjbGFzcyBFdmVudFRhcmdldCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLl9fbGlzdGVuZXJzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBgVHlwZUVycm9yOiBGYWlsZWQgdG8gZXhlY3V0ZSAnYWRkRXZlbnRMaXN0ZW5lcicgb24gJ0V2ZW50VGFyZ2V0JzogMiBhcmd1bWVudHMgcmVxdWlyZWQsIGJ1dCBvbmx5ICR7YXJndW1lbnRzLmxlbmd0aH0gcHJlc2VudC5gXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBjb25zdCBfX2xpc3RlbmVycyA9IHRoaXMuX19saXN0ZW5lcnM7XG4gICAgICBjb25zdCBhY3R1YWxUeXBlID0gdHlwZS50b1N0cmluZygpO1xuICAgICAgaWYgKCFfX2xpc3RlbmVycy5oYXMoYWN0dWFsVHlwZSkpIHtcbiAgICAgICAgX19saXN0ZW5lcnMuc2V0KGFjdHVhbFR5cGUsIG5ldyBNYXAoKSk7XG4gICAgICB9XG4gICAgICBjb25zdCBsaXN0ZW5lcnNGb3JUeXBlID0gX19saXN0ZW5lcnMuZ2V0KGFjdHVhbFR5cGUpO1xuICAgICAgaWYgKCFsaXN0ZW5lcnNGb3JUeXBlLmhhcyhsaXN0ZW5lcikpIHtcbiAgICAgICAgLy8gQW55IGdpdmVuIGxpc3RlbmVyIGlzIG9ubHkgcmVnaXN0ZXJlZCBvbmNlXG4gICAgICAgIGxpc3RlbmVyc0ZvclR5cGUuc2V0KGxpc3RlbmVyLCBvcHRpb25zKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lciwgX29wdGlvbnMpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIGBUeXBlRXJyb3I6IEZhaWxlZCB0byBleGVjdXRlICdhZGRFdmVudExpc3RlbmVyJyBvbiAnRXZlbnRUYXJnZXQnOiAyIGFyZ3VtZW50cyByZXF1aXJlZCwgYnV0IG9ubHkgJHthcmd1bWVudHMubGVuZ3RofSBwcmVzZW50LmBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IF9fbGlzdGVuZXJzID0gdGhpcy5fX2xpc3RlbmVycztcbiAgICAgIGNvbnN0IGFjdHVhbFR5cGUgPSB0eXBlLnRvU3RyaW5nKCk7XG4gICAgICBpZiAoX19saXN0ZW5lcnMuaGFzKGFjdHVhbFR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyc0ZvclR5cGUgPSBfX2xpc3RlbmVycy5nZXQoYWN0dWFsVHlwZSk7XG4gICAgICAgIGlmIChsaXN0ZW5lcnNGb3JUeXBlLmhhcyhsaXN0ZW5lcikpIHtcbiAgICAgICAgICBsaXN0ZW5lcnNGb3JUeXBlLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZGlzcGF0Y2hFdmVudChldmVudCkge1xuICAgICAgaWYgKCEoZXZlbnQgaW5zdGFuY2VvZiBtb2R1bGUuZXhwb3J0cy5FdmVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBgRmFpbGVkIHRvIGV4ZWN1dGUgJ2Rpc3BhdGNoRXZlbnQnIG9uICdFdmVudFRhcmdldCc6IHBhcmFtZXRlciAxIGlzIG5vdCBvZiB0eXBlICdFdmVudCcuYFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29uc3QgdHlwZSA9IGV2ZW50LnR5cGU7XG4gICAgICBjb25zdCBfX2xpc3RlbmVycyA9IHRoaXMuX19saXN0ZW5lcnM7XG4gICAgICBjb25zdCBsaXN0ZW5lcnNGb3JUeXBlID0gX19saXN0ZW5lcnMuZ2V0KHR5cGUpO1xuICAgICAgaWYgKGxpc3RlbmVyc0ZvclR5cGUpIHtcbiAgICAgICAgZm9yIChjb25zdCBbbGlzdGVuZXIsIG9wdGlvbnNdIG9mIGxpc3RlbmVyc0ZvclR5cGUuZW50cmllcygpKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAvLyBMaXN0ZW5lciBmdW5jdGlvbnMgbXVzdCBiZSBleGVjdXRlZCB3aXRoIHRoZSBFdmVudFRhcmdldCBhcyB0aGUgYHRoaXNgIGNvbnRleHQuXG4gICAgICAgICAgICAgIGxpc3RlbmVyLmNhbGwodGhpcywgZXZlbnQpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0ZW5lciAmJiB0eXBlb2YgbGlzdGVuZXIuaGFuZGxlRXZlbnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAvLyBMaXN0ZW5lciBvYmplY3RzIGhhdmUgdGhlaXIgaGFuZGxlRXZlbnQgbWV0aG9kIGNhbGxlZCwgaWYgdGhleSBoYXZlIG9uZVxuICAgICAgICAgICAgICBsaXN0ZW5lci5oYW5kbGVFdmVudChldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvLyBXZSBuZWVkIHRvIHJlcG9ydCB0aGUgZXJyb3IgdG8gdGhlIGdsb2JhbCBlcnJvciBoYW5kbGluZyBldmVudCxcbiAgICAgICAgICAgIC8vIGJ1dCB3ZSBkbyBub3Qgd2FudCB0byBicmVhayB0aGUgbG9vcCB0aGF0IGlzIGV4ZWN1dGluZyB0aGUgZXZlbnRzLlxuICAgICAgICAgICAgLy8gVW5mb3J0dW5hdGVseSwgdGhpcyBpcyB0aGUgYmVzdCB3ZSBjYW4gZG8sIHdoaWNoIGlzbid0IGdyZWF0LCBiZWNhdXNlIHRoZVxuICAgICAgICAgICAgLy8gbmF0aXZlIEV2ZW50VGFyZ2V0IHdpbGwgYWN0dWFsbHkgZG8gdGhpcyBzeW5jaHJvbm91c2x5IGJlZm9yZSBtb3ZpbmcgdG8gdGhlIG5leHRcbiAgICAgICAgICAgIC8vIGV2ZW50IGluIHRoZSBsb29wLlxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm9uY2UpIHtcbiAgICAgICAgICAgIC8vIElmIHRoaXMgd2FzIHJlZ2lzdGVyZWQgd2l0aCB7IG9uY2U6IHRydWUgfSwgd2UgbmVlZFxuICAgICAgICAgICAgLy8gdG8gcmVtb3ZlIGl0IG5vdy5cbiAgICAgICAgICAgIGxpc3RlbmVyc0ZvclR5cGUuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIFNpbmNlIHRoZXJlIGFyZSBubyBjYW5jZWxsYWJsZSBldmVudHMgb24gYSBiYXNlIEV2ZW50VGFyZ2V0LFxuICAgICAgLy8gdGhpcyBzaG91bGQgYWx3YXlzIHJldHVybiB0cnVlLlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzLkN1c3RvbUV2ZW50ID0gZ2xvYmFsVGhpcy5DdXN0b21FdmVudDtcbmlmICghbW9kdWxlLmV4cG9ydHMuQ3VzdG9tRXZlbnQpIHtcbiAgbW9kdWxlLmV4cG9ydHMuQ3VzdG9tRXZlbnQgPSBjbGFzcyBDdXN0b21FdmVudCBleHRlbmRzIG1vZHVsZS5leHBvcnRzLkV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCBvcHRpb25zKSB7XG4gICAgICBzdXBlcih0eXBlLCBvcHRpb25zKTtcbiAgICAgIHRoaXMuZGV0YWlsID0gb3B0aW9ucyAmJiBvcHRpb25zLmRldGFpbDtcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@whatwg-node+events@0.0.3/node_modules/@whatwg-node/events/dist/node-ponyfill.js\n");

/***/ })

};
;